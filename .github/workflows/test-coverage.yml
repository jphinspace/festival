name: Tests and Coverage

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test
    
    - name: Run tests with coverage
      run: npm test -- --coverage --coverageReporters=text --coverageReporters=json-summary
    
    - name: Check coverage thresholds
      run: |
        echo "Checking coverage thresholds..."
        COVERAGE_OUTPUT=$(npm test -- --coverage --passWithNoTests 2>&1)
        
        # Check if coverage thresholds were met
        if echo "$COVERAGE_OUTPUT" | grep -q "Coverage thresholds not met"; then
          echo "❌ Coverage thresholds not met!"
          echo "$COVERAGE_OUTPUT" | grep -A 20 "Coverage thresholds"
          exit 1
        else
          echo "✅ Coverage thresholds met!"
          echo "$COVERAGE_OUTPUT" | grep -A 15 "All files"
        fi
    
    - name: Upload coverage reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-node-${{ matrix.node-version }}
        path: coverage/
        retention-days: 30
    
    - name: Comment coverage on PR
      if: github.event_name == 'pull_request' && matrix.node-version == '20.x'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          try {
            const coverageJson = JSON.parse(fs.readFileSync('coverage/coverage-summary.json', 'utf8'));
            const total = coverageJson.total;
            
            const comment = `## Test Coverage Report
            
            | Metric | Coverage |
            |--------|----------|
            | Lines | ${total.lines.pct}% |
            | Branches | ${total.branches.pct}% |
            | Functions | ${total.functions.pct}% |
            | Statements | ${total.statements.pct}% |
            
            **Required Thresholds:**
            - ✅ Lines: 80% minimum
            - ✅ Branches: 100% required
            - ✅ Functions: 70% minimum
            - ✅ Statements: 80% minimum
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          } catch (error) {
            console.log('Could not read coverage summary:', error.message);
          }
